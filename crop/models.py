from django.db import models
from django.contrib.auth.models import User
# Create your models here.
crops_choices = [('Apple', 'Apple'),
                 ('Arcanut (Processed)', 'Arcanut (Processed)'),
                 ('Arecanut', 'Arecanut'),
                 ('Arhar/Tur', 'Arhar/Tur'),
                 ('Ash Gourd', 'Ash Gourd'),
                 ('Atcanut (Raw)', 'Atcanut (Raw)'),
                 ('Bajra', 'Bajra'),
                 ('Banana', 'Banana'),
                 ('Barley', 'Barley'),
                 ('Bean', 'Bean'),
                 ('Beans & Mutter(Vegetable)', 'Beans & Mutter(Vegetable)'),
                 ('Beet Root', 'Beet Root'),
                 ('Ber', 'Ber'),
                 ('Bhindi', 'Bhindi'),
                 ('Bitter Gourd', 'Bitter Gourd'),
                 ('Black pepper', 'Black pepper'),
                 ('Blackgram', 'Blackgram'),
                 ('Bottle Gourd', 'Bottle Gourd'),
                 ('Brinjal', 'Brinjal'),
                 ('Cabbage', 'Cabbage'),
                 ('Cardamom', 'Cardamom'),
                 ('Carrot', 'Carrot'),
                 ('Cashewnut', 'Cashewnut'),
                 ('Cashewnut Processed', 'Cashewnut Processed'),
                 ('Cashewnut Raw', 'Cashewnut Raw'),
                 ('Castor seed', 'Castor seed'),
                 ('Cauliflower', 'Cauliflower'),
                 ('Citrus Fruit', 'Citrus Fruit'),
                 ('Coconut ', 'Coconut '),
                 ('Coffee', 'Coffee'),
                 ('Colocosia', 'Colocosia'),
                 ('Cond-spcs other', 'Cond-spcs other'),
                 ('Coriander', 'Coriander'),
                 ('Cotton(lint)', 'Cotton(lint)'),
                 ('Cowpea(Lobia)', 'Cowpea(Lobia)'),
                 ('Cucumber', 'Cucumber'),
                 ('Drum Stick', 'Drum Stick'),
                 ('Dry chillies', 'Dry chillies'),
                 ('Dry ginger', 'Dry ginger'),
                 ('Garlic', 'Garlic'),
                 ('Ginger', 'Ginger'),
                 ('Gram', 'Gram'),
                 ('Grapes', 'Grapes'),
                 ('Groundnut', 'Groundnut'),
                 ('Guar seed', 'Guar seed'),
                 ('Horse-gram', 'Horse-gram'),
                 ('Jack Fruit', 'Jack Fruit'),
                 ('Jobster', 'Jobster'),
                 ('Jowar', 'Jowar'),
                 ('Jute', 'Jute'),
                 ('Jute & mesta', 'Jute & mesta'),
                 ('Kapas', 'Kapas'),
                 ('Khesari', 'Khesari'),
                 ('Korra', 'Korra'),
                 ('Lab-Lab', 'Lab-Lab'),
                 ('Lemon', 'Lemon'),
                 ('Lentil', 'Lentil'),
                 ('Linseed', 'Linseed'),
                 ('Litchi', 'Litchi'),
                 ('Maize', 'Maize'),
                 ('Mango', 'Mango'),
                 ('Masoor', 'Masoor'),
                 ('Mesta', 'Mesta'),
                 ('Moong(Green Gram)', 'Moong(Green Gram)'),
                 ('Moth', 'Moth'),
                 ('Niger seed', 'Niger seed'),
                 ('Oilseeds total', 'Oilseeds total'),
                 ('Onion', 'Onion'),
                 ('Orange', 'Orange'),
                 ('Other  Rabi pulses', 'Other  Rabi pulses'),
                 ('Other Cereals & Millets', 'Other Cereals & Millets'),
                 ('Other Citrus Fruit', 'Other Citrus Fruit'),
                 ('Other Dry Fruit', 'Other Dry Fruit'),
                 ('Other Fresh Fruits', 'Other Fresh Fruits'),
                 ('Other Kharif pulses', 'Other Kharif pulses'),
                 ('Other Vegetables', 'Other Vegetables'),
                 ('Paddy', 'Paddy'),
                 ('Papaya', 'Papaya'),
                 ('Peach', 'Peach'),
                 ('Pear', 'Pear'),
                 ('Peas  (vegetable)', 'Peas  (vegetable)'),
                 ('Peas & beans (Pulses)', 'Peas & beans (Pulses)'),
                 ('Perilla', 'Perilla'),
                 ('Pineapple', 'Pineapple'),
                 ('Plums', 'Plums'),
                 ('Pome Fruit', 'Pome Fruit'),
                 ('Pome Granet', 'Pome Granet'),
                 ('Potato', 'Potato'),
                 ('Pulses total', 'Pulses total'),
                 ('Pump Kin', 'Pump Kin'),
                 ('Ragi', 'Ragi'),
                 ('Rajmash Kholar', 'Rajmash Kholar'),
                 ('Rapeseed &Mustard', 'Rapeseed &Mustard'),
                 ('Redish', 'Redish'),
                 ('Ribed Guard', 'Ribed Guard'),
                 ('Rice', 'Rice'),
                 ('Ricebean (nagadal)', 'Ricebean (nagadal)'),
                 ('Rubber', 'Rubber'),
                 ('Safflower', 'Safflower'),
                 ('Samai', 'Samai'),
                 ('Sannhamp', 'Sannhamp'),
                 ('Sapota', 'Sapota'),
                 ('Sesamum', 'Sesamum'),
                 ('Small millets', 'Small millets'),
                 ('Snak Guard', 'Snak Guard'),
                 ('Soyabean', 'Soyabean'),
                 ('Sugarcane', 'Sugarcane'),
                 ('Sunflower', 'Sunflower'),
                 ('Sweet potato', 'Sweet potato'),
                 ('Tapioca', 'Tapioca'),
                 ('Tea', 'Tea'),
                 ('Tobacco', 'Tobacco'),
                 ('Tomato', 'Tomato'),
                 ('Total foodgrain', 'Total foodgrain'),
                 ('Turmeric', 'Turmeric'),
                 ('Turnip', 'Turnip'),
                 ('Urad', 'Urad'),
                 ('Varagu', 'Varagu'),
                 ('Water Melon', 'Water Melon'),
                 ('Wheat', 'Wheat'),
                 ('Yam', 'Yam'),
                 ('other fibres', 'other fibres'),
                 ('other misc. pulses', 'other misc. pulses'),
                 ('other oilseeds', 'other oilseeds')]
state_choices = [('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'),
                 ('Andhra Pradesh', 'Andhra Pradesh'),
                 ('Arunachal Pradesh', 'Arunachal Pradesh'),
                 ('Assam', 'Assam'),
                 ('Bihar', 'Bihar'),
                 ('Chandigarh', 'Chandigarh'),
                 ('Chhattisgarh', 'Chhattisgarh'),
                 ('Dadra and Nagar Haveli', 'Dadra and Nagar Haveli'),
                 ('Goa', 'Goa'),
                 ('Gujarat', 'Gujarat'),
                 ('Haryana', 'Haryana'),
                 ('Himachal Pradesh', 'Himachal Pradesh'),
                 ('Jammu and Kashmir ', 'Jammu and Kashmir '),
                 ('Jharkhand', 'Jharkhand'),
                 ('Karnataka', 'Karnataka'),
                 ('Kerala', 'Kerala'),
                 ('Madhya Pradesh', 'Madhya Pradesh'),
                 ('Maharashtra', 'Maharashtra'),
                 ('Manipur', 'Manipur'),
                 ('Meghalaya', 'Meghalaya'),
                 ('Mizoram', 'Mizoram'),
                 ('Nagaland', 'Nagaland'),
                 ('Odisha', 'Odisha'),
                 ('Puducherry', 'Puducherry'),
                 ('Punjab', 'Punjab'),
                 ('Rajasthan', 'Rajasthan'),
                 ('Sikkim', 'Sikkim'),
                 ('Tamil Nadu', 'Tamil Nadu'),
                 ('Telangana ', 'Telangana '),
                 ('Tripura', 'Tripura'),
                 ('Uttar Pradesh', 'Uttar Pradesh'),
                 ('Uttarakhand', 'Uttarakhand'),
                 ('West Bengal', 'West Bengal')]

season_choices = [('Kharif     ', 'Kharif     '),
                  ('Whole Year ', 'Whole Year '),
                  ('Autumn     ', 'Autumn     '),
                  ('Rabi       ', 'Rabi       '),
                  ('Summer     ', 'Summer     '),
                  ('Winter     ', 'Winter     ')]


class Crop(models.Model):
    state = models.CharField(max_length=100, choices=state_choices)
    year = models.IntegerField()
    season = models.CharField(max_length=50, choices=season_choices)
    crop = models.CharField(max_length=100, choices=crops_choices)
    area = models.IntegerField()
    production = models.IntegerField()

    def __str__(self):
        return self.crop


class Rice(models.Model):
    state = models.CharField(max_length=100, choices=state_choices)
    year = models.IntegerField()
    season = models.CharField(max_length=50, choices=season_choices)
    area = models.IntegerField()
    production = models.IntegerField()
    rainfall = models.IntegerField(default=0)
